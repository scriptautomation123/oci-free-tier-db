-- Create Schema SQL Template
-- This script creates the partition test schema with required privileges

SET ECHO OFF
SET FEEDBACK ON
SET HEADING OFF
SET PAGESIZE 0

-- Display current operation
SELECT 'Creating schema: {{ schema_user }}' FROM DUAL;

-- Create user
BEGIN
  EXECUTE IMMEDIATE 'CREATE USER {{ schema_user }} IDENTIFIED BY "{{ schema_password }}"';
  DBMS_OUTPUT.PUT_LINE('SUCCESS: User {{ schema_user }} created');
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE = -1920 THEN
      DBMS_OUTPUT.PUT_LINE('INFO: User {{ schema_user }} already exists - updating password');
      EXECUTE IMMEDIATE 'ALTER USER {{ schema_user }} IDENTIFIED BY "{{ schema_password }}"';
    ELSE
      DBMS_OUTPUT.PUT_LINE('ERROR: Failed to create user {{ schema_user }}: ' || SQLERRM);
      RAISE;
    END IF;
END;
/

-- Grant basic privileges
GRANT CONNECT TO {{ schema_user }};
GRANT RESOURCE TO {{ schema_user }};

-- Grant additional privileges for partition management
GRANT CREATE TABLE TO {{ schema_user }};
GRANT CREATE SEQUENCE TO {{ schema_user }};
GRANT CREATE PROCEDURE TO {{ schema_user }};
GRANT CREATE FUNCTION TO {{ schema_user }};
GRANT CREATE PACKAGE TO {{ schema_user }};
GRANT CREATE TRIGGER TO {{ schema_user }};
GRANT CREATE VIEW TO {{ schema_user }};
GRANT CREATE SYNONYM TO {{ schema_user }};

-- Set unlimited quota on default tablespace (Always Free tier)
ALTER USER {{ schema_user }} QUOTA UNLIMITED ON DATA;

-- Grant system privileges needed for partition operations
GRANT CREATE ANY TABLE TO {{ schema_user }};
GRANT ALTER ANY TABLE TO {{ schema_user }};
GRANT DROP ANY TABLE TO {{ schema_user }};

-- Verify user creation
SELECT 'User created: ' || username || ' (Default tablespace: ' || default_tablespace || ')' 
FROM dba_users 
WHERE username = UPPER('{{ schema_user }}');

SELECT 'Verification: Schema {{ schema_user }} creation complete' FROM DUAL;

EXIT;