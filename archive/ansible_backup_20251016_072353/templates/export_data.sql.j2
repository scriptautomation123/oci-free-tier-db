-- Generated by Ansible - Data Export Script for Cleanup
-- Timestamp: {{ ansible_date_time.iso8601 }}
-- Environment: {{ deployment_environment | default('development') }}

SET SERVEROUTPUT ON SIZE UNLIMITED
SET PAGESIZE 0
SET LINESIZE 1000
SET FEEDBACK OFF
SET VERIFY OFF
SET HEADING OFF
SET TRIMSPOOL ON

PROMPT ====================================================================
PROMPT Data Export for Backup Before Cleanup
PROMPT Timestamp: {{ ansible_date_time.iso8601 }}
PROMPT ====================================================================

-- Create export directory structure
PROMPT Creating export files...

-- Export partition strategy configurations
SPOOL {{ backup_dir }}/data-export/partition_strategies.sql

PROMPT -- Partition Strategy Configuration Export
PROMPT -- Generated: {{ ansible_date_time.iso8601 }}
PROMPT

SELECT 'INSERT INTO partition_strategy_config VALUES (' ||
       '''' || strategy_name || ''', ' ||
       '''' || table_pattern || ''', ' ||
       '''' || partition_type || ''', ' ||
       '''' || partition_interval || ''');'
FROM partition_strategy_config
WHERE 1=1;

SPOOL OFF

-- Export partition maintenance jobs
SPOOL {{ backup_dir }}/data-export/maintenance_jobs.sql

PROMPT -- Partition Maintenance Jobs Export
PROMPT -- Generated: {{ ansible_date_time.iso8601 }}
PROMPT

SELECT 'INSERT INTO partition_maintenance_jobs VALUES (' ||
       job_id || ', ' ||
       '''' || job_name || ''', ' ||
       '''' || schedule_expression || ''', ' ||
       '''' || job_action || ''', ' ||
       '''' || status || ''');'
FROM partition_maintenance_jobs
WHERE 1=1;

SPOOL OFF

-- Export operation logs (last 30 days)
SPOOL {{ backup_dir }}/data-export/operation_logs.sql

PROMPT -- Operation Logs Export (Last 30 Days)
PROMPT -- Generated: {{ ansible_date_time.iso8601 }}
PROMPT

SELECT 'INSERT INTO partition_operation_log VALUES (' ||
       operation_id || ', ' ||
       '''' || operation_type || ''', ' ||
       '''' || table_name || ''', ' ||
       'TO_DATE(''' || TO_CHAR(operation_date, 'YYYY-MM-DD HH24:MI:SS') || ''', ''YYYY-MM-DD HH24:MI:SS''), ' ||
       '''' || status || ''', ' ||
       '''' || REPLACE(details, '''', '''''') || ''');'
FROM partition_operation_log
WHERE operation_date > SYSDATE - 30
ORDER BY operation_date;

SPOOL OFF

-- Export general operation logs
SPOOL {{ backup_dir }}/data-export/general_logs.sql

PROMPT -- General Operation Logs Export
PROMPT -- Generated: {{ ansible_date_time.iso8601 }}
PROMPT

SELECT 'INSERT INTO operation_log VALUES (' ||
       log_id || ', ' ||
       'TO_DATE(''' || TO_CHAR(log_date, 'YYYY-MM-DD HH24:MI:SS') || ''', ''YYYY-MM-DD HH24:MI:SS''), ' ||
       '''' || log_level || ''', ' ||
       '''' || REPLACE(message, '''', '''''') || ''');'
FROM operation_log
WHERE log_date > SYSDATE - 30
ORDER BY log_date;

SPOOL OFF

-- Create restoration script
SPOOL {{ backup_dir }}/data-export/restore_data.sql

PROMPT -- Data Restoration Script
PROMPT -- Generated: {{ ansible_date_time.iso8601 }}
PROMPT -- Use this script to restore exported data to a new database
PROMPT

PROMPT -- Step 1: Create tables (ensure packages are installed first)
PROMPT -- Step 2: Load partition strategies
PROMPT @partition_strategies.sql
PROMPT
PROMPT -- Step 3: Load maintenance jobs  
PROMPT @maintenance_jobs.sql
PROMPT
PROMPT -- Step 4: Load operation logs
PROMPT @operation_logs.sql
PROMPT
PROMPT -- Step 5: Load general logs
PROMPT @general_logs.sql
PROMPT
PROMPT COMMIT;
PROMPT
PROMPT PROMPT Data restoration completed!

SPOOL OFF

-- Generate export summary
DECLARE
    v_strategy_count NUMBER;
    v_job_count NUMBER;
    v_op_log_count NUMBER;
    v_gen_log_count NUMBER;
BEGIN
    -- Count records being exported
    SELECT COUNT(*) INTO v_strategy_count FROM partition_strategy_config;
    SELECT COUNT(*) INTO v_job_count FROM partition_maintenance_jobs;
    SELECT COUNT(*) INTO v_op_log_count FROM partition_operation_log WHERE operation_date > SYSDATE - 30;
    SELECT COUNT(*) INTO v_gen_log_count FROM operation_log WHERE log_date > SYSDATE - 30;
    
    DBMS_OUTPUT.PUT_LINE('====================================================================');
    DBMS_OUTPUT.PUT_LINE('DATA EXPORT SUMMARY');
    DBMS_OUTPUT.PUT_LINE('====================================================================');
    DBMS_OUTPUT.PUT_LINE('Export Date: {{ ansible_date_time.iso8601 }}');
    DBMS_OUTPUT.PUT_LINE('Export Location: {{ backup_dir }}/data-export/');
    DBMS_OUTPUT.PUT_LINE('');
    DBMS_OUTPUT.PUT_LINE('Records Exported:');
    DBMS_OUTPUT.PUT_LINE('  Partition Strategies: ' || v_strategy_count);
    DBMS_OUTPUT.PUT_LINE('  Maintenance Jobs: ' || v_job_count);
    DBMS_OUTPUT.PUT_LINE('  Operation Logs (30d): ' || v_op_log_count);
    DBMS_OUTPUT.PUT_LINE('  General Logs (30d): ' || v_gen_log_count);
    DBMS_OUTPUT.PUT_LINE('');
    DBMS_OUTPUT.PUT_LINE('Files Generated:');
    DBMS_OUTPUT.PUT_LINE('  partition_strategies.sql');
    DBMS_OUTPUT.PUT_LINE('  maintenance_jobs.sql');
    DBMS_OUTPUT.PUT_LINE('  operation_logs.sql');
    DBMS_OUTPUT.PUT_LINE('  general_logs.sql');
    DBMS_OUTPUT.PUT_LINE('  restore_data.sql');
    DBMS_OUTPUT.PUT_LINE('');
    DBMS_OUTPUT.PUT_LINE('‚úÖ Data export completed successfully!');
    DBMS_OUTPUT.PUT_LINE('üìÅ Use restore_data.sql to restore to new database');
    DBMS_OUTPUT.PUT_LINE('====================================================================');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('‚ùå Data export encountered errors: ' || SQLERRM);
END;
/

EXIT;