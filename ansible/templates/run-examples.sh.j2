#!/bin/bash
# Generated by Ansible - Oracle Package Examples Script
# Timestamp: {{ ansible_date_time.iso8601 }}
# Environment: {{ deployment_environment | default('development') }}

set -euo pipefail

# Configuration
DB_SERVICE="{{ database_name }}_HIGH"
DB_USER="{{ admin_username }}"
DB_PASSWORD="{{ admin_password }}"
WALLET_DIR="{{ wallet_dir }}"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Logging function
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# Display banner
echo -e "${GREEN}"
cat << 'EOF'
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë           Oracle Partition Management Suite Examples             ‚ïë
‚ïë                                                                  ‚ïë
‚ïë  This script demonstrates the installed Oracle packages          ‚ïë
‚ïë  and provides usage examples for partition management            ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
echo -e "${NC}"

# Set TNS_ADMIN for wallet
export TNS_ADMIN="$WALLET_DIR"

# Test connection
log "Testing database connection..."
if echo "SELECT 'Connection successful' FROM dual;" | sqlplus -s "${DB_USER}/${DB_PASSWORD}@${DB_SERVICE}" > /dev/null 2>&1; then
    success "Database connection established"
else
    error "Failed to connect to database"
    exit 1
fi

# Create examples SQL script
EXAMPLES_SQL=$(cat << 'EOF'
SET SERVEROUTPUT ON SIZE UNLIMITED
SET PAGESIZE 1000
SET LINESIZE 200

PROMPT ====================================================================
PROMPT Oracle Partition Management Suite - Usage Examples
PROMPT ====================================================================

-- Example 1: Check package versions
PROMPT
PROMPT Example 1: Package Version Information
PROMPT ======================================

SELECT 
    object_name as package_name,
    status,
    TO_CHAR(created, 'YYYY-MM-DD HH24:MI:SS') as created_date
FROM user_objects 
WHERE object_type = 'PACKAGE'
ORDER BY object_name;

-- Example 2: List available functions/procedures
PROMPT
PROMPT Example 2: Available Package Functions
PROMPT =====================================

SELECT DISTINCT
    object_name as package_name,
    procedure_name,
    object_type
FROM user_procedures 
WHERE object_name LIKE '%PARTITION%' OR object_name LIKE '%PKG'
ORDER BY object_name, procedure_name;

-- Example 3: Check configuration tables
PROMPT
PROMPT Example 3: Configuration Tables Status
PROMPT =====================================

SELECT 
    table_name,
    num_rows,
    TO_CHAR(last_analyzed, 'YYYY-MM-DD HH24:MI:SS') as last_analyzed
FROM user_tables 
WHERE table_name LIKE '%PARTITION%' OR table_name LIKE '%CONFIG%'
ORDER BY table_name;

-- Example 4: Sample usage (if packages exist)
PROMPT
PROMPT Example 4: Sample Package Usage
PROMPT ===============================

BEGIN
    -- Check if partition utilities package exists
    DECLARE
        v_count NUMBER;
    BEGIN
        SELECT COUNT(*)
        INTO v_count
        FROM user_objects
        WHERE object_name = 'PARTITION_UTILS_PKG'
        AND object_type = 'PACKAGE'
        AND status = 'VALID';
        
        IF v_count > 0 THEN
            DBMS_OUTPUT.PUT_LINE('‚úÖ Partition utilities package is available');
            -- Add actual function calls here when implemented
        ELSE
            DBMS_OUTPUT.PUT_LINE('‚ÑπÔ∏è  Partition utilities package not found');
        END IF;
    END;
    
    -- Check logging package
    DECLARE
        v_count NUMBER;
    BEGIN
        SELECT COUNT(*)
        INTO v_count
        FROM user_objects
        WHERE object_name LIKE '%LOGGER%'
        AND object_type = 'PACKAGE'
        AND status = 'VALID';
        
        IF v_count > 0 THEN
            DBMS_OUTPUT.PUT_LINE('‚úÖ Logging package is available');
        ELSE
            DBMS_OUTPUT.PUT_LINE('‚ÑπÔ∏è  Logging package not found');
        END IF;
    END;
END;
/

PROMPT
PROMPT ====================================================================
PROMPT Examples completed successfully!
PROMPT ====================================================================
PROMPT
PROMPT Next Steps:
PROMPT 1. Review the installed packages above
PROMPT 2. Explore individual package documentation
PROMPT 3. Create custom partitioning strategies
PROMPT 4. Set up monitoring and maintenance jobs
PROMPT
PROMPT For more information, check the project documentation
PROMPT ====================================================================

EOF
)

# Execute examples
log "Running Oracle package examples..."
echo "$EXAMPLES_SQL" | sqlplus -s "${DB_USER}/${DB_PASSWORD}@${DB_SERVICE}"

success "Examples completed successfully!"
echo ""
echo "üìö Usage Examples Summary:"
echo "   ‚Ä¢ Package inventory displayed"
echo "   ‚Ä¢ Available functions listed" 
echo "   ‚Ä¢ Configuration tables checked"
echo "   ‚Ä¢ Sample usage demonstrated"
echo ""
echo "üîó Connection Details:"
echo "   ‚Ä¢ Database: ${DB_SERVICE}"
echo "   ‚Ä¢ User: ${DB_USER}"
echo "   ‚Ä¢ Wallet: ${WALLET_DIR}"
echo ""
echo "üí° Tip: Use './connect-db.sh' for interactive SQL sessions"