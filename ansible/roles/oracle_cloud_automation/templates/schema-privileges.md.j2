# Schema User Privileges and Management

**Generated:** {{ deployment_time }}  
**Database:** {{ database_info.database_name.value }}  
**Environment:** Always Free Tier

## üë• Schema User Overview

### Primary Schema User
- **Username:** {{ schema_user }}
- **Purpose:** Application-specific database operations
- **Privileges:** Enhanced partition management capabilities
- **Tablespace:** DATA (with unlimited quota)

### Admin User
- **Username:** {{ database_info.admin_username.value }}
- **Purpose:** Database administration and infrastructure management
- **Privileges:** Full administrative access (ADMIN role)

## üîê Privilege Matrix

### Basic Database Privileges
| Privilege | {{ schema_user }} | Admin | Purpose |
|-----------|:---:|:-----:|---------|
| CONNECT | ‚úÖ | ‚úÖ | Basic connection capability |
| RESOURCE | ‚úÖ | ‚úÖ | Create basic objects |
| CREATE SESSION | ‚úÖ | ‚úÖ | Login to database |
| CREATE TABLE | ‚úÖ | ‚úÖ | Create tables |
| CREATE VIEW | ‚úÖ | ‚úÖ | Create views |
| CREATE SEQUENCE | ‚úÖ | ‚úÖ | Create sequences |
| CREATE PROCEDURE | ‚úÖ | ‚úÖ | Create stored procedures |
| CREATE FUNCTION | ‚úÖ | ‚úÖ | Create functions |
| CREATE PACKAGE | ‚úÖ | ‚úÖ | Create packages |
| CREATE TYPE | ‚úÖ | ‚úÖ | Create custom types |
| CREATE SYNONYM | ‚úÖ | ‚úÖ | Create synonyms |

### Partition Management Privileges
| Privilege | {{ schema_user }} | Admin | Purpose |
|-----------|:---:|:-----:|---------|
| CREATE ANY TABLE | ‚úÖ | ‚úÖ | Create partitioned tables |
| ALTER ANY TABLE | ‚úÖ | ‚úÖ | Modify partition structures |
| SELECT ANY TABLE | ‚úÖ | ‚úÖ | Query partition metadata |
| SELECT ON DBA_TAB_PARTITIONS | ‚úÖ | ‚úÖ | View partition information |
| SELECT ON DBA_PART_TABLES | ‚úÖ | ‚úÖ | View partitioned tables |
| SELECT ON DBA_TAB_SUBPARTITIONS | ‚úÖ | ‚úÖ | View subpartition details |
| SELECT ON DBA_PART_INDEXES | ‚úÖ | ‚úÖ | View partitioned indexes |
| SELECT ON DBA_IND_PARTITIONS | ‚úÖ | ‚úÖ | View index partitions |
| SELECT ON DBA_SEGMENTS | ‚úÖ | ‚úÖ | View storage information |
| SELECT ON DBA_OBJECTS | ‚úÖ | ‚úÖ | View object metadata |

### Administrative Privileges
| Privilege | {{ schema_user }} | Admin | Purpose |
|-----------|:---:|:-----:|---------|
| ADMIN Role | ‚ùå | ‚úÖ | Full database administration |
| CREATE USER | ‚ùå | ‚úÖ | User management |
| ALTER USER | ‚ùå | ‚úÖ | User modification |
| GRANT ANY PRIVILEGE | ‚ùå | ‚úÖ | Privilege management |
| SYSDBA | ‚ùå | ‚úÖ | System administration |

## üõ†Ô∏è Connection Patterns

### Schema User Connection
```bash
# Using enhanced connection script
./enhanced-connect-db.sh schema

# Manual connection
export TNS_ADMIN="{{ wallet_dir }}"
sqlplus {{ schema_user }}/[password]@{{ database_info.database_name.value }}_HIGH

# Connection with environment variable
DB_SCHEMA_USER={{ schema_user }} ./enhanced-connect-db.sh schema
```

### Admin User Connection
```bash
# Using enhanced connection script
./enhanced-connect-db.sh admin

# Manual connection
export TNS_ADMIN="{{ wallet_dir }}"
sqlplus {{ database_info.admin_username.value }}/[password]@{{ database_info.database_name.value }}_HIGH
```

### Context Switching
```sql
-- Check current user and schema
SELECT USER, SYS_CONTEXT('USERENV', 'CURRENT_SCHEMA') FROM dual;

-- Switch to schema context (if connected as admin)
ALTER SESSION SET CURRENT_SCHEMA = {{ schema_user }};

-- Verify schema switch
SELECT SYS_CONTEXT('USERENV', 'CURRENT_SCHEMA') FROM dual;

-- Return to original schema
ALTER SESSION SET CURRENT_SCHEMA = {{ database_info.admin_username.value }};
```

## üìä Schema Operations

### Object Management
```sql
-- Create tables in schema context
CREATE TABLE {{ schema_user }}.my_partitioned_table (
    id NUMBER,
    data_date DATE,
    value VARCHAR2(100)
) PARTITION BY RANGE (data_date) (
    PARTITION p_2024_01 VALUES LESS THAN (DATE '2024-02-01'),
    PARTITION p_2024_02 VALUES LESS THAN (DATE '2024-03-01')
);

-- View schema objects
SELECT object_type, COUNT(*) 
FROM all_objects 
WHERE owner = UPPER('{{ schema_user }}')
GROUP BY object_type;

-- Check partition information
SELECT table_name, partition_name, high_value
FROM all_tab_partitions
WHERE table_owner = UPPER('{{ schema_user }}')
ORDER BY table_name, partition_position;
```

### Privilege Verification
```sql
-- Check user privileges
SELECT privilege 
FROM user_sys_privs 
ORDER BY privilege;

-- Check role privileges
SELECT granted_role 
FROM user_role_privs 
ORDER BY granted_role;

-- Check table privileges
SELECT table_name, privilege 
FROM user_tab_privs 
ORDER BY table_name, privilege;

-- Verify partition access
SELECT COUNT(*) as accessible_partitions
FROM all_tab_partitions
WHERE table_owner = USER;
```

## üîí Security Considerations

### Password Management
- **Admin Password:** Auto-generated by Terraform, stored in infrastructure outputs
- **Schema Password:** Configurable via `schema_password` variable, defaults to admin password
- **Rotation:** Both passwords can be updated through Ansible variables

### Access Control
- **Schema User:** Limited to application operations, cannot create users or grant system privileges
- **Admin User:** Full access but should be used sparingly for administrative tasks only
- **Network Security:** Access controlled by OCI security lists and database ACLs

### Best Practices
1. **Use schema user for application operations** - avoid admin user for routine tasks
2. **Regular password rotation** - update passwords periodically via deployment
3. **Principle of least privilege** - only grant necessary permissions
4. **Audit access** - monitor user activity through Oracle audit trails
5. **Schema isolation** - keep application objects in dedicated schema

## üß™ Testing User Setup

### Connection Tests
```bash
# Test all connection types
./enhanced-connect-db.sh interactive

# Automated connection test
./enhanced-connect-db.sh admin -c "SELECT USER FROM dual;"
./enhanced-connect-db.sh schema -c "SELECT USER FROM dual;"
```

### Privilege Tests
```sql
-- Test table creation privilege
CREATE TABLE test_privileges (id NUMBER);

-- Test partition access
SELECT COUNT(*) FROM all_tab_partitions;

-- Test schema objects access
SELECT COUNT(*) FROM user_objects;

-- Cleanup test
DROP TABLE test_privileges;
```

## üö® Troubleshooting

### Common Issues

#### User Creation Failed
```sql
-- Check if user already exists
SELECT username, account_status FROM all_users WHERE username = UPPER('{{ schema_user }}');

-- Reset user password
ALTER USER {{ schema_user }} IDENTIFIED BY "new_password";
```

#### Insufficient Privileges
```sql
-- Check current privileges
SELECT * FROM user_sys_privs WHERE privilege LIKE '%PARTITION%';

-- Grant missing privileges (as admin)
GRANT SELECT ON DBA_TAB_PARTITIONS TO {{ schema_user }};
```

#### Connection Issues
```bash
# Verify wallet configuration
ls -la {{ wallet_dir }}

# Check TNS configuration
export TNS_ADMIN="{{ wallet_dir }}"
tnsping {{ database_info.database_name.value }}_HIGH

# Test basic connectivity
sqlplus /nolog
```

#### Tablespace Issues
```sql
-- Check tablespace quota
SELECT tablespace_name, bytes, max_bytes 
FROM user_ts_quotas;

-- Set unlimited quota (as admin)
ALTER USER {{ schema_user }} QUOTA UNLIMITED ON DATA;
```

## üìã Maintenance Tasks

### Regular Maintenance
```sql
-- Monitor schema object growth
SELECT object_type, COUNT(*), SUM(bytes)/1024/1024 as MB
FROM user_objects o
LEFT JOIN user_segments s ON o.object_name = s.segment_name
GROUP BY object_type;

-- Check user session activity
SELECT username, status, machine, program
FROM v$session
WHERE username IN ('{{ database_info.admin_username.value | upper }}', '{{ schema_user | upper }}');

-- Verify privilege compliance
SELECT grantee, privilege, admin_option
FROM dba_sys_privs
WHERE grantee = UPPER('{{ schema_user }}')
ORDER BY privilege;
```

### Schema Cleanup
```sql
-- Drop all objects in schema (careful!)
BEGIN
    FOR obj IN (SELECT object_name, object_type FROM user_objects) LOOP
        EXECUTE IMMEDIATE 'DROP ' || obj.object_type || ' ' || obj.object_name;
    END LOOP;
END;
/

-- Reset schema to empty state
-- (This will be handled by deployment_action=reset-schema)
```

---

**Note:** This privilege matrix is automatically maintained through the deployment process. Manual privilege changes may be overwritten during redeployment.

**Last Updated:** {{ deployment_time }}