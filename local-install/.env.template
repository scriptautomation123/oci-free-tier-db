# ==============================================================================
# GitHub Actions Environment Variables Template
# ==============================================================================
# Copy this file to your repository secrets or environment variables
# Each line represents a secret/variable that should be configured in:
# - Repository Settings > Secrets and Variables > Actions
# - Or in Environment-specific settings for production deployments
# ==============================================================================

# REQUIRED SECRETS (Repository Settings > Secrets)
# ================================================

# OCI_COMPARTMENT_OCID
# Description: Your OCI compartment OCID where resources will be created
# Example: ocid1.compartment.oc1..aaaaaaaa5erdnj52lkeiq3k766rrrb4ywv4qxhakw4htg7y7pqpokqsb63sa
# Usage: Used as TF_VAR_compartment_ocid in workflows

# DB_ADMIN_PASSWORD
# Description: Database admin password (optional - will be auto-generated if not provided)
# Requirements: 12-30 chars with uppercase, lowercase, number, and special char (#, _)
# Usage: Used as TF_VAR_admin_password in workflows

# OPTIONAL SECRETS
# ================

# DB_WALLET_PASSWORD
# Description: Wallet password (leave empty to use admin password)
# Usage: Used as TF_VAR_wallet_password in workflows

# ENVIRONMENT VARIABLES (Repository Settings > Variables)
# =======================================================

# TF_VAR_region
# Description: OCI region for deployment
# Default: us-ashburn-1
# Options: us-ashburn-1, us-phoenix-1, eu-frankfurt-1, etc.

# TF_VAR_db_name
# Description: Database name (1-8 characters, start with letter)
# Default: PARTTEST
# Pattern: ^[A-Za-z][A-Za-z0-9_]{0,7}$

# TF_VAR_db_version
# Description: Oracle Database version
# Default: 19c
# Options: 19c, 21c, 23c

# TF_VAR_environment_name
# Description: Environment name for resource tagging
# Default: partition-test
# Pattern: ^[a-z0-9-]+$

# TF_VAR_create_storage_bucket
# Description: Create Object Storage bucket for backups/exports
# Default: true
# Options: true, false

# TF_VAR_load_test_data
# Description: Load test data into database
# Default: false
# Options: true, false

# TF_VAR_run_validation_tests
# Description: Run validation tests after deployment
# Default: false
# Options: true, false

# TF_VAR_test_data_size
# Description: Size of test data to generate
# Default: small
# Options: small, medium, large

# TF_VAR_backup_retention_days
# Description: Number of days to retain automated backups
# Default: 7
# Range: 1-60

# TF_VAR_whitelisted_ips
# Description: List of IP addresses allowed to connect (JSON array format)
# Default: []
# Example: ["203.0.113.0/24", "198.51.100.1/32"]

# ==============================================================================
# ALWAYS FREE TIER PROTECTION (DO NOT CHANGE)
# ==============================================================================
# These values are hardcoded in variables.tf to prevent accidental charges:
# - TF_VAR_cpu_core_count: 1 (enforced)
# - TF_VAR_storage_size_tbs: 0.02 (enforced)
# - TF_VAR_auto_scaling_enabled: false (enforced)
# - TF_VAR_is_free_tier: true (enforced)
# - TF_VAR_license_model: LICENSE_INCLUDED (enforced)
# - TF_VAR_acknowledge_free_tier_limits: true (enforced)

# ==============================================================================
# SETUP INSTRUCTIONS
# ==============================================================================

# 1. REPOSITORY SECRETS (Sensitive Data)
#    Go to: Repository Settings > Secrets and Variables > Actions > Secrets
#    Add:
#    - OCI_COMPARTMENT_OCID: [Your compartment OCID]
#    - DB_ADMIN_PASSWORD: [Optional - strong password or leave empty for auto-generation]

# 2. REPOSITORY VARIABLES (Non-Sensitive Configuration)
#    Go to: Repository Settings > Secrets and Variables > Actions > Variables
#    Add any of the TF_VAR_* variables above that you want to customize

# 3. ENVIRONMENT-SPECIFIC CONFIGURATION (Recommended for Production)
#    Go to: Repository Settings > Environments
#    Create environments: development, staging, production
#    Set environment-specific variables and secrets

# 4. VALIDATION
#    - The workflow will validate Always Free tier compliance automatically
#    - All required secrets will be checked before deployment
#    - Cost protection is built into the Terraform configuration

# ==============================================================================
# LOCAL DEVELOPMENT
# ==============================================================================
# For local development, use the setup-env-vars.sh script:
#   cd terraform
#   source ./setup-env-vars.sh
#
# This will interactively set up all required environment variables.